<?xml version="1.0"?>
<workflow
   id="question-workflow"
   title="Question Workflow"
   description="A question"
   initial_state="">

  <state id="questionstates.draft" title="draft question">
    <grant permission="bungeni.question.edit" role="bungeni.Owner" />
    <grant permission="bungeni.question.view" role="bungeni.Owner" />    
    <grant permission="bungeni.question.delete" role="bungeni.Owner" />    
    <deny permission="bungeni.question.add" role="bungeni.MP" />        
  </state>

  <state id="questionstates.submitted" title="Question submitted to clerk">
    <deny permission="bungeni.question.edit" role="bungeni.Owner" />
    <grant permission="bungeni.question.view" role="bungeni.Clerk" />    
    <deny permission="bungeni.question.delete" role="bungeni.Owner" />     
  </state>

  <state id="questionstates.received" title="Question received by clerk">
    <grant permission="bungeni.question.edit" role="bungeni.Clerk" />
  </state>

  <state id="questionstates.complete" title="Question complete">
    <deny permission="bungeni.question.edit" role="bungeni.Clerk" />  
    <grant permission="bungeni.question.edit" role="bungeni.Speaker" />
  </state>

  <state id="questionstates.admissible" title="admissible Question">
    <grant permission="bungeni.question.view" role="bungeni.Everybody" />      
    <!-- TODO permissions for the ministry the question is directed to, maybe to be set in the action? -->    
  </state>

  <state id="questionstates.inadmissible" title="inadmissible Question">
    <grant permission="bungeni.question.view" role="bungeni.Everybody" />      
  </state>

  <state id="questionstates.clarify_mp" title="Question needs MP clarification">
    <deny permission="bungeni.question.edit" role="bungeni.Clerk" />
    <grant permission="bungeni.question.edit" role="bungeni.Owner" />  
  </state>

  <state id="questionstates.clarify_clerk" title="Question needs Clerks clarification">
    <deny permission="bungeni.question.edit" role="bungeni.Speaker" />
    <grant permission="bungeni.question.edit" role="bungeni.Clerk" />      
  </state>

  <state id="questionstates.scheduled" title="Question scheduled">
    <deny permission="bungeni.question.edit" role="bungeni.Speaker" />  
    <grant permission="bungeni.response.add" role="bungeni.Clerk" />
    <grant permission="bungeni.response.edit" role="bungeni.Clerk" />   
    <grant permission="bungeni.response.view" role="bungeni.Clerk" />         
  </state>

  <state id="questionstates.response_pending" title="Question pending response">
    <deny permission="bungeni.question.edit" role="bungeni.Speaker" />  
    <grant permission="bungeni.response.add" role="bungeni.Clerk" />
    <grant permission="bungeni.response.edit" role="bungeni.Clerk" />   
    <grant permission="bungeni.response.view" role="bungeni.Clerk" />        
  </state>

  <state id="questionstates.deferred" title="Question deferred">
  </state>

  <state id="questionstates.postponed" title="Question postponed">
  </state>

  <state id="questionstates.elapsed" title="Question elapsed">
  </state>

  <state id="questionstates.responded" title="Question responded">
  </state>

  <state id="questionstates.answered" title="Question answered">
    <grant permission="bungeni.question.add" role="bungeni.MP" />    
  </state>

  <state id="questionstates.withdrawn" title="Question withdrawn">
    <deny permission="bungeni.question.edit" role="bungeni.Speaker" />  
    <deny permission="bungeni.question.edit" role="bungeni.Clerk" />  
    <deny permission="bungeni.question.edit" role="bungeni.Owner" />            
  </state>

  <transition 
     id="create"
     title="Create"
     trigger="automatic"
     source=""
     destination="questionstates.draft"
     action="bungeni.core.workflows.questionactions.create"
     condition=""
     />

  <transition 
     id="submit-to-clerk"
     title="Submit to Clerk"
     trigger="manual"
     source="questionstates.draft"
     destination="questionstates.submitted"
     permission="bungeni.question.Submit"
     action="bungeni.core.workflows.questionactions.submitToClerk"
     condition=""
     event=".interfaces.IQuestionSubmittedEvent"
     />
  <transition 
     id="received-by-clerk"
     title="Receive"
     trigger="manual"
     source="questionstates.submitted"
     destination="questionstates.received"
     permission="bungeni.question.Recieve"
     action="bungeni.core.workflows.questionactions.recievedByClerk"
     condition=""
     event=".interfaces.IQuestionReceivedEvent"
     />
     
    <!--If a question is flagged by the Clerk /' Speakers office as 
    "requiring editing by the MP" (e.g. missing data etc.) the system sends 
    a notification to the MP to access the question and review it according 
    to Speaker/Clerk's  office remarks. 
    A new version of the question will be created, once the question is modified and saved.
    -->     
  <transition 
     id="require-edit-by-mp"
     title="Needs Clarification by MP"
     trigger="manual"
     source="questionstates.received"
     destination="questionstates.clarify_mp"
     permission="bungeni.question.clerk.Review"
     action="bungeni.core.workflows.questionactions.requireEditByMp"
     condition=""
     event=".interfaces.IQuestionClarifyEvent"
     />
     
  <!--After the Clerk's Office is through with the Notices reviews and there are satisfied 
    that the Questions have all the formal requirements – the question is marked as “complete” 
    and is made available / forwarded to the Speaker's Office for reviewing and to make it 
    “admissible”. At the same time the question is also forwarded to the ministry. 
    While the ministry can preview the question the ministry cannot respond until 
    the state of the question has been set to “admissible” by the Speaker's office 
    (for details about questions being set to “admissible” see Approval of Questions )
  -->    
     
  <transition 
     id="complete"
     title="Complete"
     trigger="manual"
     source="questionstates.received"
     destination="questionstates.complete"
     permission="bungeni.question.clerk.Review"
     action="bungeni.core.workflows.questionactions.complete"
     condition=""
     event=".interfaces.IQuestionCompleteEvent"
     />
  <!--the Speaker's office may decide that a proposed Question is “admissible”, “inadmissible” 
    or “requires amendment”.
    
    An inadmissible Question is rejected and the Member who proposed the Question 
    will be notified accordingly via their workspace and optionally by email.
    Question that require amendments may be modified and re-submitted
    Questions marked as “admissible” are then made available for Scheduling   
  -->
     
  <transition 
     id="approve"
     title="Approve"
     trigger="manual"
     source="questionstates.complete"
     destination="questionstates.admissible"
     permission="bungeni.question.speaker.Review"
     action="bungeni.core.workflows.questionactions.approve"
     condition=""
     event=""
     />
  <transition 
     id="reject"
     title="Reject"
     trigger="manual"
     source="questionstates.complete"
     destination="questionstates.inadmissible"
     permission="bungeni.question.speaker.Review"
     action="bungeni.core.workflows.questionactions.reject"
     condition=""
     event=".interfaces.IQuestionRejectedEvent"
     />
  <transition 
     id="require-amendment"
     title="Needs Clarification"
     trigger="manual"
     source="questionstates.complete"
     destination="questionstates.clarify_clerk"
     permission="bungeni.question.speaker.Review"
     action="bungeni.core.workflows.questionactions.requireAmendment"
     condition=""
     event=""
     />
     
  <!--
    a question that requires clarification/amendmends
    can be resubmitted by the clerks office
  -->        
  
  <transition 
     id="complete-clarify"
     title="Complete"
     trigger="manual"
     source="questionstates.clarify_clerk"
     destination="questionstates.complete"
     permission="bungeni.question.clerk.Review"
     action="bungeni.core.workflows.questionactions.completeClarify"
     condition=""
     event=""
     />
  <!--
     or send to the mp for clarification
  -->           
     
  <transition 
     id="mp-clarify"
     title="Needs Clarification by MP"
     trigger="manual"
     source="questionstates.clarify_clerk"
     destination="questionstates.clarify_mp"
     permission="bungeni.question.clerk.Review"
     action="bungeni.core.workflows.questionactions.mpClarify"
     condition=""
     event=""
     />

  <!--
     after a question is amended it can be resubmitted to the clerks office
  -->           
     
  <transition 
     id="resubmit-clerk"
     title="Resubmit to clerk"
     trigger="manual"
     source="questionstates.clarify_mp"
     destination="questionstates.submitted"
     permission="bungeni.question.Submit"
     action="bungeni.core.workflows.questionactions.submitToClerk"
     condition=""
     event=""
     />
     
  <!--
    Among the “admissible” questions the Speaker or the Clerk's office will 
    select questions for scheduling for a specific sitting
    Questions when “admissible” are made available for “scheduling”
    Questions with the “require a Written response” flag do not appear as questions available for scheduling.
  -->    
     
  <transition 
     id="schedule"
     title="Schedule"
     trigger="manual"
     source="questionstates.admissible"
     destination="questionstates.scheduled"
     permission="bungeni.question.Schedule"
     action="bungeni.core.workflows.questionactions.schedule"
     condition=".utils.getQuestionSchedule"
     event=".interfaces.IQuestionScheduledEvent"
     />
     
  <!--
     questions which are flagged as “requiring written response” are never scheduled,
     but are answered directly by the ministry 
  -->    
     
  <transition 
     id="send-ministry"
     title="Send to ministry"
     trigger="manual"
     source="questionstates.admissible"
     destination="questionstates.response_pending"
     permission="bungeni.question.Schedule"
     action="bungeni.core.workflows.questionactions.sendToMinistry"
     condition=".utils.getQuestionMinistry"
     event=".interfaces.IQuestionSentToMinistryEvent"
     />
     
  <!--
     questions can be forwarded to another ministry to be answered.
  -->      
     
  <transition 
     id="forward-ministry"
     title="Forward to another ministry"
     trigger="manual"
     source="questionstates.response_pending"
     destination="questionstates.response_pending"
     permission="bungeni.question.Write_answer"
     action="bungeni.core.workflows.questionactions.sendToMinistry"
     condition=".utils.getQuestionMinistry"
     event=".interfaces.IQuestionSentToMinistryEvent"
     />

  <!-- Submission of an response triggers this -->     
     
  <transition 
     id="respond-writing"
     title="Respond"
     trigger="system"
     source="questionstates.response_pending"
     destination="questionstates.responded"
     permission="bungeni.question.Write_answer"
     action="bungeni.core.workflows.questionactions.respondWriting"
     condition=""
     event=""
     />
     
     
  <transition 
     id="elapse-pending"
     title="Elapse"
     trigger="manual"
     source="questionstates.response_pending"
     destination="questionstates.elapsed"
     permission="bungeni.question.Write_answer"
     action="bungeni.core.workflows.questionactions.elapse"
     condition=""
     event=""
     />
     
  <!--
    all admissible questions awaiting an oral response etc. and flag them for “scheduling” for a later day 
    or otherwise drop them from the pending ones. Dropping a question sets its status to “Deferred” 
  -->          
     
  <transition 
     id="defer"
     title="Defer"
     trigger="manual"
     source="questionstates.admissible"
     destination="questionstates.deferred"
     permission="bungeni.question.Schedule"
     action="bungeni.core.workflows.questionactions.defer"
     condition=""
     event=".interfaces.IQuestionDeferredEvent"
     />
  <transition 
     id="elapse-defered"
     title="Elapse"
     trigger="manual"
     source="questionstates.deferred"
     destination="questionstates.elapsed"
     permission="bungeni.question.Schedule"
     action="bungeni.core.workflows.questionactions.elapse"
     condition=""
     event=""
     />
     
  <!--
    a deferred question may be send to a ministry for a written response     
  -->
  
  <transition 
     id="defer-ministry"
     title="Send to ministry"
     trigger="manual"
     source="questionstates.deferred"
     destination="questionstates.response_pending"
     permission="bungeni.question.Schedule"
     action="bungeni.core.workflows.questionactions.sendToMinistry"
     condition=".utils.getQuestionMinistry"
     event=".interfaces.IQuestionSentToMinistryEvent"
     />

  <!--
    A defered question can be rescheduled later       
  -->
     
  <transition 
     id="schedule-deferred"
     title="Schedule"
     trigger="manual"
     source="questionstates.deferred"
     destination="questionstates.scheduled"
     permission="bungeni.question.Schedule"
     action="bungeni.core.workflows.questionactions.schedule"
     condition=".utils.getQuestionSchedule"
     event=""
     />

  <!--
    in a sitting the question is either answered or it gets postopned  
  -->
    
  <transition 
     id="postpone"
     title="Postpone"
     trigger="manual"
     source="questionstates.scheduled"
     destination="questionstates.postponed"
     permission="bungeni.question.Schedule"
     action="bungeni.core.workflows.questionactions.postpone"
     condition=""
     event=".interfaces.IQuestionPostponedEvent"
     />          
  <transition 
     id="respond-sitting"
     title="Respond"
     trigger="system"
     source="questionstates.scheduled"
     destination="questionstates.responded"
     permission="bungeni.question.Respond"
     action="bungeni.core.workflows.questionactions.respondSitting"
     condition=""
     event=""
     />

  <!--
    postponed questions are rescheduled
  -->           
     
  <transition 
     id="schedule-postponed"
     title="Schedule"
     trigger="manual"
     source="questionstates.postponed"
     destination="questionstates.scheduled"
     permission="bungeni.question.Schedule"
     action="bungeni.core.workflows.questionactions.schedule"
     condition=".utils.getQuestionSchedule"
     event=".interfaces.IQuestionScheduledEvent"
     />
     
  <!--
     postponed question can elapse
  -->           
     
  <transition 
     id="elapse-postponed"
     title="Elapse"
     trigger="manual"
     source="questionstates.postponed"
     destination="questionstates.elapsed"
     permission="bungeni.question.Schedule"
     action="bungeni.core.workflows.questionactions.elapse"
     condition=""
     event=""
     />
     
  <!--
    postponed question can be send to a ministry for a written response       
  -->    
     
  <transition 
     id="postponed-ministry"
     title="Send to Ministry"
     trigger="manual"
     source="questionstates.postponed"
     destination="questionstates.response_pending"
     permission="bungeni.question.Schedule"
     action="bungeni.core.workflows.questionactions.sendToMinistry"
     condition=".utils.getQuestionMinistry"
     event=".interfaces.IQuestionSentToMinistryEvent"
     />
 
  <!--
    The response is sent to the Clerk's office, before being sent to the MP.
    XXX come up with something better than answered  
  -->     
     
  <transition 
     id="answer"
     title="Answer"
     trigger="system"
     source="questionstates.responded"
     destination="questionstates.answered"
     permission="bungeni.question.Answer"
     action="bungeni.core.workflows.questionactions.answer"
     condition=""
     event=".interfaces.IQuestionAnsweredEvent"
     />
  <!--
    the MP can withdraw his question at (almost) any stage
    i.e the stages where it can still be presented to the 
    ministry/house
  -->         
     
  <transition 
     id="withdraw-submitted"
     title="Withdraw"
     trigger="manual"
     source="questionstates.submitted"
     destination="questionstates.withdrawn"
     permission="bungeni.question.Withdraw"
     action="bungeni.core.workflows.questionactions.withdraw"
     condition=""
     event=""
     />
  <transition 
     id="withdraw-received"
     title="Withdraw"
     trigger="manual"
     source="questionstates.received"
     destination="questionstates.withdrawn"
     permission="bungeni.question.Withdraw"
     action="bungeni.core.workflows.questionactions.withdraw"
     condition=""
     event=""
     />
  <transition 
     id="withdraw-complete"
     title="Withdraw"
     trigger="manual"
     source="questionstates.complete"
     destination="questionstates.withdrawn"
     permission="bungeni.question.Withdraw"
     action="bungeni.core.workflows.questionactions.withdraw"
     condition=""
     event=""
     />
  <transition 
     id="withdraw-admissible"
     title="Withdraw"
     trigger="manual"
     source="questionstates.admissible"
     destination="questionstates.withdrawn"
     permission="bungeni.question.Withdraw"
     action="bungeni.core.workflows.questionactions.withdraw"
     condition=""
     event=""
     />
  <transition 
     id="withdraw-amend"
     title="Withdraw"
     trigger="manual"
     source="questionstates.clarify_mp"
     destination="questionstates.withdrawn"
     permission="bungeni.question.Withdraw"
     action="bungeni.core.workflows.questionactions.withdraw"
     condition=""
     event=""
     />
  <transition 
     id="withdraw-scheduled"
     title="Withdraw"
     trigger="manual"
     source="questionstates.scheduled"
     destination="questionstates.withdrawn"
     permission="bungeni.question.Withdraw"
     action="bungeni.core.workflows.questionactions.withdraw"
     condition=""
     event=""
     />
  <transition 
     id="withdraw-deferred"
     title="Withdraw"
     trigger="manual"
     source="questionstates.deferred"
     destination="questionstates.withdrawn"
     permission="bungeni.question.Withdraw"
     action="bungeni.core.workflows.questionactions.withdraw"
     condition=""
     event=""
     />

  <transition 
     id="withdraw-postponed"
     title="Withdraw"
     trigger="manual"
     source="questionstates.postponed"
     destination="questionstates.withdrawn"
     permission="bungeni.question.Withdraw"
     action="bungeni.core.workflows.questionactions.withdraw"
     condition=""
     event=""
     />
     
 
                              
</workflow>  
