<?xml version="1.0"?>
<configure xmlns="http://namespaces.zope.org/zope">

  <!-- workflow permissions -->
  
  <include file="permissions.zcml" />
  
  <!-- grant workflow permissions to roles -->
  
  <include file="grants.zcml" />

  <!-- general transition event dispatcher -->
  
  <subscriber
     handler=".events.workflowTransitionEventDispatcher" />

    <!-- cascade for automatic transitions on content -->
  
  <subscriber
     handler=".events.fireAutomaticTransitions"
     for="bungeni.models.interfaces.IBungeniContent
          ore.workflow.interfaces.IWorkflowTransitionEvent"
     />

  <!-- silly versioning thingy for wf runtime-->
  
  <utility
     provides="ore.workflow.interfaces.IWorkflowVersions"
     factory=".states.NullVersions"
     />

  <!-- generic workflow initialization for content -->
  
  <subscriber
     handler=".events.initializeWorkflow"
     for="bungeni.models.interfaces.IBungeniContent
          zope.lifecycleevent.IObjectCreatedEvent"
     />

  <!-- content workflow -->
  
  <adapter
     for="bungeni.models.interfaces.IBungeniContent"
     provides="ore.workflow.interfaces.IWorkflowState"
     factory=".states.WorkflowState" />

  <adapter
     for="bungeni.models.interfaces.IBungeniContent"
     provides="ore.workflow.interfaces.IWorkflow"
     factory=".simple.SimpleWorkflowAdapter" />

  <adapter
     for="bungeni.models.interfaces.IBungeniContent"
     provides="ore.workflow.interfaces.IWorkflowInfo"
     factory="bungeni.core.workflows.states.StateWorkflowInfo"/>

  <!-- content workflow -->
  
  <adapter
     for="bungeni.models.interfaces.IVersion"
     provides="ore.workflow.interfaces.IWorkflow"
     factory=".adapters.VersionWorkflowAdapter" />
     
  <subscriber
     handler=".events.initializeWorkflow"     
     for="bungeni.models.interfaces.IVersion
          bungeni.core.interfaces.VersionCreated" />
            
        
  
  <!-- bill workflow -->
  
  <adapter
     for="bungeni.models.interfaces.IBill"
     provides="ore.workflow.interfaces.IWorkflowState"
     factory=".states.WorkflowState" />

  <adapter
     for="bungeni.models.interfaces.IBill"
     provides="ore.workflow.interfaces.IWorkflow"
     factory=".adapters.BillWorkflowAdapter" />     



  <!-- questions workflow -->

  <adapter
     for="bungeni.models.interfaces.IQuestion"
     provides="ore.workflow.interfaces.IWorkflowState"
     factory=".states.WorkflowState" />
  
  <adapter
     for="bungeni.models.interfaces.IQuestion"
     provides="ore.workflow.interfaces.IWorkflow"
     factory=".adapters.QuestionWorkflowAdapter" />



  <subscriber handler=".question.SendNotificationToMemberUponReceipt" /> 
  <subscriber handler=".question.SendNotificationToClerkUponSubmit" />
  <subscriber handler=".question.SendNotificationToMemberUponReject" />
  <subscriber handler=".question.SendNotificationToMemberUponNeedsClarification" />
  <subscriber handler=".question.SendNotificationToMemberUponDeferred" />
  <subscriber handler=".question.SendNotificationToMemberUponSchedule" />    
  <subscriber handler=".question.SendNotificationToMemberUponPostponed" />
  <subscriber handler=".question.SendNotificationToMemberUponSentToMinistry" />
  <subscriber handler=".question.SendNotificationToMemberUponAnswer" />                
  <subscriber handler=".question.SendNotificationToMinistryUponComplete" />
  <subscriber handler=".question.SendNotificationToMemberUponComplete" /> 

  <!-- responses workflow -->
  <adapter
     for="bungeni.models.interfaces.IResponse"
     provides="ore.workflow.interfaces.IWorkflowState"
     factory=".states.WorkflowState" />
  
  <adapter
     for="bungeni.models.interfaces.IResponse"
     provides="ore.workflow.interfaces.IWorkflow"
     factory=".adapters.ResponseWorkflowAdapter" />
     
  

  <!-- motion workflow -->
  <adapter
     for="bungeni.models.interfaces.IMotion"
     provides="ore.workflow.interfaces.IWorkflowState"
     factory=".states.WorkflowState" />
  
  <adapter
     for="bungeni.models.interfaces.IMotion"
     provides="ore.workflow.interfaces.IWorkflow"
     factory=".adapters.MotionWorkflowAdapter" />
     
 

  <subscriber handler=".motion.SendNotificationToMemberUponReceipt" /> 
  <subscriber handler=".motion.SendNotificationToClerkUponSubmit" />
  <subscriber handler=".motion.SendNotificationToMemberUponReject" />
  <subscriber handler=".motion.SendNotificationToMemberUponNeedsClarification" />
  <subscriber handler=".motion.SendNotificationToMemberUponDeferred" />
  <subscriber handler=".motion.SendNotificationToMemberUponSchedule" />    
  <subscriber handler=".motion.SendNotificationToMemberUponPostponed" />
  <subscriber handler=".motion.SendNotificationToMemberUponDebated" />                

</configure>    
