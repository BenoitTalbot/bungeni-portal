/* import bungeni demo data */
/* call with bin/psql bungeni < ~/devel/bungenidata/importpg.sql */
/* replace /home/undesa/devel/bungenidata/ with the absolute(!) path where your importdata is located */


copy public.countries from '%(directory)s/data/demodata/countries.csv' csv ;
/* workaround for now because vocabulary source does not accept unicode */
/* XXX */

/*delete from countries where country_id not in ('AO', 'KE', 'UG', 'ZA');*/

copy public.provinces from '%(directory)s/data/demodata/provinces.csv' csv ;

copy public.regions from '%(directory)s/data/demodata/regions.csv' csv ;

copy public.constituencies (constituency_id, name, province_id, region_id, start_date) 
from '%(directory)s/data/demodata/constituencies.csv' csv ;

copy public.constituency_details (constituency_id, voters, "date", population) from
'%(directory)s/data/demodata/constituency_details.csv' csv ;

copy public.address_types ( address_type_id, address_type_name)
from '%(directory)s/data/demodata/address_types.csv' csv ;

copy public.venues ( venue_id, short_name) 
from '%(directory)s/data/demodata/venues.csv' csv ;


/*copy public.user_types 
from '%(directory)s/data/demodata/user_types.csv' csv;
*/

/*copy public.group_types 
from '%(directory)s/data/demodata/group_types.csv' csv;
*/

copy public.user_role_types
from '%(directory)s/data/demodata/user_role_type.csv' csv;

copy public.users ( user_id, first_name, middle_name, last_name, date_of_birth, date_of_death, 
email, birth_country, gender, national_id, active_p) 
from  '%(directory)s/data/demodata/users.csv' csv ;

update public.users set active_p = 'D' where date_of_death is not null;

update public.users set titles = 'Mrs.' where gender = 'F';
update public.users set titles = 'Mr.' where gender = 'M';
update public.users set middle_name = '' where middle_name is null;

copy public.groups ( group_id, short_name, full_name, description, 
    status, start_date, end_date, type, parent_group_id)
from '%(directory)s/data/demodata/groups.csv'  
csv;

copy public.parliaments (parliament_id, election_date) from '%(directory)s/data/demodata/parliaments.csv'
with delimiter ';' csv;


/*copy public.parliament_membership_type
from '%(directory)s/data/demodata/parliament_membership_type.csv' csv;
*/

copy public.user_group_memberships (membership_id, user_id, group_id, start_date, end_date, notes)
from '%(directory)s/data/demodata/parliament_group_members.csv'
csv;

copy public.parliament_memberships (membership_id, constituency_id,  elected_nominated , leave_reason)
    from '%(directory)s/data/demodata/parliament_members.csv'
csv ;

update public.parliament_memberships set elected_nominated ='N' where constituency_id = 0; 

copy public.sessions (session_id, parliament_id, short_name, start_date, end_date, notes)
from '%(directory)s/data/demodata/sessions.csv'
csv ;


update public.sessions set full_name = short_name || ' ' || extract(year from start_date) 
;

update public.sessions set short_name = full_name;


copy public.user_group_memberships (membership_id, user_id, group_id, start_date, end_date)
from '%(directory)s/data/demodata/partymembers.csv'
csv;

/* comittees */
copy public.committee_types
from '%(directory)s/data/demodata/committee_types.csv'
csv;

copy public.committees ( committee_id, committee_type_id, no_members, min_no_members,
quorum, proportional_representation)
from '%(directory)s/data/demodata/committees.csv'
csv;

SELECT setval('user_group_memberships_membership_id_seq', 2000);

copy public.user_group_memberships ( group_id, user_id , start_date, end_date)
from '%(directory)s/data/demodata/committee_members.csv'
csv;


copy public.user_group_memberships ( group_id, user_id, start_date, end_date, notes, membership_type)
from '%(directory)s/data/demodata/ministers.csv'
csv;

copy public.sitting_type (sitting_type_id, sitting_type, start_time, end_time)
from '%(directory)s/data/demodata/sitting_type.csv'
csv;

copy public.bill_types (bill_type_id, bill_type_name)
from '%(directory)s/data/demodata/bill_types.csv'
csv;

copy public.group_sittings (sitting_id, group_id,  sitting_type_id, start_date, end_date)
from '%(directory)s/data/demodata/sittings.csv'
csv;

copy public.attendance_type( attendance_id, attendance_type)
from '%(directory)s/data/demodata/attendance_type.csv'
csv;

/*copy public.user_group_memberships ( user_id, group_id, start_date, end_date)
from '%(directory)s/data/demodata/partymembers.csv'
csv;*/

/*INSERT INTO user_group_memberships ( group_id, user_id, start_date, end_date) 
SELECT DISTINCT 304 as no , "user_group_memberships"."user_id", "groups"."start_date", "groups"."end_date" 
FROM "public"."user_group_memberships", "public"."committees", "public"."groups" 
WHERE ( "user_group_memberships"."group_id" = "committees"."committee_id" 
    AND "committees"."parliament_id" = "groups"."group_id" ) 
    AND ( ( "user_group_memberships"."user_id" 
    NOT IN ( SELECT "user_group_memberships"."user_id" 
            FROM "public"."user_group_memberships" 
            WHERE ( "group_id" = "committees"."parliament_id" ) ) ) )
AND  "committees"."parliament_id" = 6;

INSERT INTO user_group_memberships ( group_id, user_id, start_date, end_date) 
SELECT DISTINCT 305 as no , "user_group_memberships"."user_id", "groups"."start_date", "groups"."end_date" 
FROM "public"."user_group_memberships", "public"."committees", "public"."groups" 
WHERE ( "user_group_memberships"."group_id" = "committees"."committee_id" 
    AND "committees"."parliament_id" = "groups"."group_id" ) 
    AND ( ( "user_group_memberships"."user_id" 
    NOT IN ( SELECT "user_group_memberships"."user_id" 
            FROM "public"."user_group_memberships" 
            WHERE ( "group_id" = "committees"."parliament_id" ) ) ) )
AND  "committees"."parliament_id" = 7;

INSERT INTO user_group_memberships ( group_id, user_id, start_date, end_date) 
SELECT DISTINCT 306 as no , "user_group_memberships"."user_id", "groups"."start_date", "groups"."end_date" 
FROM "public"."user_group_memberships", "public"."committees", "public"."groups" 
WHERE ( "user_group_memberships"."group_id" = "committees"."committee_id" 
    AND "committees"."parliament_id" = "groups"."group_id" ) 
    AND ( ( "user_group_memberships"."user_id" 
    NOT IN ( SELECT "user_group_memberships"."user_id" 
            FROM "public"."user_group_memberships" 
            WHERE ( "group_id" = "committees"."parliament_id" ) ) ) )
AND  "committees"."parliament_id" = 8;

INSERT INTO user_group_memberships ( group_id, user_id, start_date, end_date) 
SELECT DISTINCT 307 as no , "user_group_memberships"."user_id", "groups"."start_date", "groups"."end_date" 
FROM "public"."user_group_memberships", "public"."committees", "public"."groups" 
WHERE ( "user_group_memberships"."group_id" = "committees"."committee_id" 
    AND "committees"."parliament_id" = "groups"."group_id" ) 
    AND ( ( "user_group_memberships"."user_id" 
    NOT IN ( SELECT "user_group_memberships"."user_id" 
            FROM "public"."user_group_memberships" 
            WHERE ( "group_id" = "committees"."parliament_id" ) ) ) )
AND  "committees"."parliament_id" = 9;
*/
/* set the active flags to something sane */

update user_group_memberships set active_p =  false where end_date is not null;

update user_group_memberships set active_p =  true  where end_date is  null;

update users set active_p = 'I' where user_id not in (select user_id from user_group_memberships where active_p = True);

update users set active_p = 'D' where date_of_death is not null;

/*update "user_group_memberships" SET "title" = 4 WHERE "membership_id"  IN (
    SELECT "user_group_memberships"."membership_id" 
    FROM "public"."parliaments", "public"."groups", "public"."user_group_memberships" 
    WHERE ( "parliaments"."parliament_id" = "groups"."group_id" AND "user_group_memberships"."group_id" = "groups"."group_id" ));
*/

UPDATE groups SET status = 'draft';


copy public.sitting_attendance( sitting_id, member_id, attendance_id)
from '%(directory)s/data/demodata/sitting_attendance.csv'
csv;


COPY "public"."role_titles" ("membership_id", "title_name_id", "start_date", "end_date") 
FROM '%(directory)s/data/demodata/role_titles.csv' csv ;

INSERT INTO addresses (role_title_id)
SELECT role_title_id FROM role_titles;


/*get all sequences */
select  sequence_name from information_schema.sequences
where sequence_schema='public';

/*set the sequences to a new value*/
 
 SELECT setval('principal_sequence', 5000); 
/* SELECT setval('groups_group_id_seq', 1000);*/
 SELECT setval('sessions_session_id_seq', 1000);
 SELECT setval('item_sequence', 1000);
 SELECT setval('group_sittings_sitting_id_seq', 5000);
 SELECT setval('items_schedule_schedule_id_seq', 1000);
 SELECT setval('question_changes_change_id_seq', 1000);
 SELECT setval('bill_versions_version_id_seq', 1000);
 SELECT setval('question_versions_version_id_seq', 1000);
 SELECT setval('bill_changes_change_id_seq', 1000);
 SELECT setval('object_subscriptions_subscriptions_id_seq', 1000);
 SELECT setval('group_assignments_assignment_id_seq', 1000);
 SELECT setval('item_votes_vote_id_seq', 1000);
 SELECT setval('provinces_province_id_seq', 1000);
/* SELECT setval('users_user_id_seq', 1000);*/
 SELECT setval('takes_take_id_seq', 1000);
 SELECT setval('take_media_media_id_seq', 1000);
 SELECT setval('rotas_rota_id_seq', 1000);
 SELECT setval('transcripts_transcript_id_seq', 1000);
 SELECT setval('regions_region_id_seq', 1000);
 SELECT setval('motion_amendments_amendment_id_seq', 1000);
 SELECT setval('motion_changes_change_id_seq', 1000);
 SELECT setval('committee_types_committee_type_id_seq', 1000);
 SELECT setval('constituencies_constituency_id_seq', 1000);
 SELECT setval('motion_versions_version_id_seq', 1000);
 SELECT setval('constituency_details_constituency_detail_id_seq', 1000);
 SELECT setval('user_role_types_user_role_type_id_seq', 1000);


/* set some descriptions */
UPDATE users SET description =
(SELECT
 '<p>' || "users"."titles" || ' ' || "users"."first_name" ||' ' || "users"."middle_name" || ' ' || "users"."last_name" ||
' (' ||  "users"."gender" || ')</p> ' ||
'<p> born ' || "users"."date_of_birth" || ' in ' || "countries"."country_name" || '</p>' ||
'<p> email: <a href="mailto:' || "users"."email" ||'" >' || "users"."email" || '</a> </p>' 
FROM "public"."countries", "public"."users" as users_1
WHERE ( "countries"."country_id" = "users"."birth_country" )
    AND users.user_id = users_1.user_id)
;


UPDATE users SET description =
(SELECT
 '<p>' || "users"."titles" || ' ' || "users"."first_name" ||' ' || "users"."middle_name" || ' ' || "users"."last_name" ||
' (' ||  "users"."gender" || ')</p> ' ||
'<p> born ' || "users"."date_of_birth" || ' in ' || "countries"."country_name" || '</p>' ||
'<p> died ' || "users"."date_of_death" || '</p>'  
FROM "public"."countries", "public"."users" as users_1
WHERE ( "countries"."country_id" = "users"."birth_country" )
    AND users.user_id = users_1.user_id)
WHERE users.active_p = 'D'    
;

UPDATE "user_group_memberships" SET "notes" =
(SELECT "description" FROM "public"."users"
 WHERE ( "user_group_memberships"."user_id" = "users"."user_id" ))
|| "notes" ; 


/* assign the correct types to usre_group_membership*/

UPDATE user_group_memberships SET membership_type = 'committeemember'
WHERE user_id IN
    (SELECT "user_group_memberships"."user_id" 
    FROM "public"."user_group_memberships" as ugm, "public"."committees" 
    WHERE ( "ugm"."group_id" = "committees"."committee_id" )
    AND ("user_group_memberships"."group_id" = "ugm"."group_id"));
    

UPDATE user_group_memberships SET membership_type = 'minister'
WHERE user_id IN    
    (SELECT "ugm"."user_id"
    FROM "public"."user_group_memberships" as ugm, "public"."groups" 
    WHERE ( "ugm"."group_id" = "groups"."group_id" ) 
    AND ("public"."groups"."type" = 'ministry')
    AND ("user_group_memberships"."group_id" = "ugm"."group_id"));   
    
      

    
UPDATE user_group_memberships SET membership_type = 'partymember'
WHERE user_id IN      
    (SELECT "ugm"."user_id" 
    FROM "public"."user_group_memberships" as ugm, "public"."political_parties" 
    WHERE ( "ugm"."group_id" = "political_parties"."party_id" )
    AND ("user_group_memberships"."group_id" = "ugm"."group_id"));       
    


update user_group_memberships set membership_type = 'committeestaff'
where membership_type = 'committeemember'
and user_group_memberships.user_id not in (
select user_id 
from user_group_memberships  as ugms inner join parliaments 
	on ugms.group_id = parliaments.parliament_id);    
    
    
    
UPDATE user_group_memberships set "membership_type" = 'parliamentmember'
where "user_group_memberships"."membership_id"
IN
(
SELECT "user_group_memberships_1"."membership_id" 
FROM "public"."user_group_memberships" AS "user_group_memberships_1", "public"."groups", "public"."parliaments" 
WHERE ( "user_group_memberships_1"."group_id" = "groups"."group_id" AND "parliaments"."parliament_id" = "groups"."group_id" )
);

/* set the login name to something sane */
/* and give them all the password 'member' */
UPDATE users SET login=(
        SELECT substring( (substring(lower(first_name) from 1 for 1) || '.' || lower(last_name) || substring(lower(middle_name) from 1 for 1)) from 1 for 16)  
        FROM users AS users_1 WHERE users_1.user_id = users.user_id),
    salt = 'eQuiFAajSGwD' , password = 'f13e87f86549ade4983c00ca248ecf2a'
WHERE login IS NULL;



UPDATE constituencies SET start_date = '1963-07-11';	


