/*
 * XmlOutputPanel.java
 *
 * Created on October 9, 2007, 6:58 PM
 */

package org.bungeni.odtransform;

import javax.swing.JFrame;
import javax.swing.WindowConstants;

/**
 *
 * @author  Administrator
 */
public class XmlOutputPanel extends javax.swing.JPanel {
    JFrame parent;
    /** Creates new form XmlOutputPanel */
    public XmlOutputPanel() {
        initComponents();
    }
    public XmlOutputPanel(JFrame frame, String xmlText) {
        initComponents();
        parent = frame;
        this.xmlTextPane.setContentType("text/xml");
        xmlTextPane.setText(xmlText);
    } 
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        xmlTextPane = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();

        jScrollPane1.setViewportView(xmlTextPane);

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(196, 196, 196)
                        .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 121, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 334, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 17, Short.MAX_VALUE)
                .add(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        parent.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane xmlTextPane;
    // End of variables declaration//GEN-END:variables
        public static void Show(String xmlString) {
          JFrame selectSectionDlg;
             selectSectionDlg = new JFrame();
             selectSectionDlg.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
             //initDebaterecord.setPreferredSize(new Dimension(420, 300));
             XmlOutputPanel panel = new XmlOutputPanel(selectSectionDlg, xmlString);
             selectSectionDlg.getContentPane().add(panel);
             selectSectionDlg.setTitle("XML Transformed Output");
             selectSectionDlg.pack();
             selectSectionDlg.setLocationRelativeTo(null);
             selectSectionDlg.setVisible(true);
             //selectSectionDlg.setAlwaysOnTop(true);  
         }
}
